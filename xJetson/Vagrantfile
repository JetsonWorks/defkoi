# -*- mode: ruby -*-
# vi: set ft=ruby :

# Defaults for config options defined in CONFIG
$instance_name_prefix ||= "xJetson"
$vm_memory ||= 10240 # SDK Manager requires at least 8GB
$vm_cpus ||= 4
$subnet ||= "192.168.0.0/24"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.define vm_name = $instance_name_prefix
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Define plugin, list of plugins, or definitions of plugins to install for the
  # local project. Vagrant will require these plugins to be installed and available
  # for the project. If plugins are not available, it will attempt to automatically
  # install them into the project.
  config.vagrant.plugins = ["vagrant-vbguest", "vagrant-disksize"]
  config.disksize.size = "63GB"

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080
#  config.vm.network "forwarded_port", guest: 8443, host: 443

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
#  config.vm.network "forwarded_port", guest: 8443, host: 8443, host_ip: "127.0.0.1"

  config.vm.network "public_network"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Customize the amount of memory on the VM:
    vb.memory = $vm_memory
    vb.cpus = $vm_cpus
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  #
  ## Install necessary packages
  config.vm.provision "shell", inline: <<-SHELL
    cd /root
    apt update
    dpkg -l |grep libgcc-8-dev ||
      apt install -y gcc perl make git byobu vim-gtk3 wget curl gcc-8 libgcc-8-dev g++-8-aarch64-linux-gnu distcc ccache mpi-default-dev libopenblas-dev python3.8-dev python3-pip
    dpkg -l kubuntu-desktop ||
      apt install -y kubuntu-desktop
    apt upgrade -y --autoremove
    snap install firefox
    systemctl set-default graphical.target
    [ -f /etc/bash_completion.d/git-prompt.sh ] ||
      curl -Lo /etc/bash_completion.d/git-prompt.sh https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
    echo -e "\nOptionally download and install SDK Manager MANUALLY from: https://developer.download.nvidia.com/sdkmanager/redirects/sdkmanager-deb.html\n"
  SHELL

  ## Set variables for Banner installation script
  config.vm.provision "shell", path: "distcc-config.sh",
    env: { "subnet" => $subnet }

  config.vm.provision "shell", path: "personalize"

end
