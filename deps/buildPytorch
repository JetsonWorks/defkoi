#!/bin/bash

$(dirname $0)/checkDeps || exit 1
gitDir=~/git

[[ "$CCACHE_PREFIX" && "$DISTCC_HOSTS" ]] || {
  echo "CMake and PyTorch take a really long time to compile on the Jetson, but we could use ccache/distcc to distribute the compilation."
  echo "This project includes a Vagrantfile for an Ubuntu 18.04 VM (named xJetson) with packages needed to compile most of the code."
  echo "This VM is also a great place to install SDK Manager to flash JetPack > 4.6.1 onto your Jetson."
  read -ep "To take advantage of distributed compilation, would you like to configure ccache/distcc now? [Y/n]: " answer
  [[ "$answer" == "n" || "$answer" == "N" ]] || {
    export CCACHE_PREFIX=distcc
    read -ep "Enter value of DISTCC_HOSTS: " -i "localhost/4 xJetson/8" DISTCC_HOSTS
    export DISTCC_HOSTS
    echo -e "\nThis script's environment has been updated, and we'll append to ~/.bashrc for the future."
    echo -e "Appending to ~/.bashrc:\nexport CCACHE_PREFIX=$CCACHE_PREFIX\nexport DISTCC_HOSTS='$DISTCC_HOSTS'"
    grep -q "^export CCACHE_PREFIX" ~/.bashrc || echo "export CCACHE_PREFIX=distcc" >> ~/.bashrc
    grep -q "^export DISTCC_HOSTS" ~/.bashrc || echo "export DISTCC_HOSTS='$DISTCC_HOSTS'" >> ~/.bashrc
  }
}

mkdir -p $gitDir ~/Downloads
cd $gitDir
echo -e "\nChecking OpenSSL"
[ -d openssl ] ||
  git clone git://git.openssl.org/openssl.git
pushd openssl
[ -h libssl.so ] || {
  git checkout openssl-3.1.3
  ./Configure && make -j$(nproc)
}
popd

echo -e "\nChecking CMake"
if cmake --version |grep "cmake version 3.10"; then
  [ -d cmake ] ||
    git clone https://gitlab.kitware.com/cmake/cmake
  pushd cmake
  git checkout -f master
  git pull
  export OPENSSL_ROOT_DIR=$gitDir/openssl
  [ -f Bootstrap.cmk/cmake ] || ./bootstrap --parallel=4 || exit 1
  make -j$(nproc) && sudo make install || exit 1
  popd
fi

# PyTorch relies on ~/.local/bin/ninja, which is apparently installed via "pip install ninja", but
# ~/.local/bin/ninja doesn't work in venv
# also see https://github.com/pytorch/pytorch/#prerequisites
# one more wrinkle: cmake must be upgraded before pip can (compile and) install ninja
echo -e "\nChecking Python packages"
packages=(scikit-build ninja pyyaml typing-extensions)
num=$(pip3 list |egrep -i "$(echo ${packages[*]} |sed 's/ /\|/g')" |grep -c \()
[ $num -ge ${#packages[*]} ] || {
  echo -e "\tInstalling some Python packages"
  pip3 install scikit-build || exit 1
  pip3 install ninja || exit 1
  pip3 install pyyaml typing-extensions || exit 1
  # if errors from above, try:
  #  apt install --reinstall python3.8 libpython3.8-minimal:arm64 libpython3.8-stdlib:arm64 python3.8-minimal python3.8-venv python-pip-whl python3-pip
}

echo -e "\nBuilding PyTorch"
[ -d pytorch ] ||
  git clone https://github.com/pytorch/pytorch
pushd pytorch

PYTORCH_BUILD_VERSION=1.12.1
git checkout -f v$PYTORCH_BUILD_VERSION
if [[ $PYTORCH_BUILD_VERSION =~ 1.8 ]]; then
  patch=pytorch-1.8-jetpack-4.4.1.patch
elif [[ $PYTORCH_BUILD_VERSION =~ 1.9 ]]; then
  patch=pytorch-1.9-jetpack-4.5.1.patch
elif [[ $PYTORCH_BUILD_VERSION =~ 1.10 ]]; then
  patch=pytorch-1.10-jetpack-4.5.1.patch
elif [[ $PYTORCH_BUILD_VERSION =~ 1.12 ]]; then
  patch=pytorch-1.10-jetpack-4.5.1.patch
fi

git submodule update --init --recursive --jobs 0
curl -L https://gist.githubusercontent.com/dusty-nv/ce51796085178e1f38e3c6a1663a93a1/raw/a3560b2ef086754b96fa04326ad8f4bd117045c2/$patch |patch -p1

export USE_NCCL=0
export USE_QNNPACK=0
export USE_PYTORCH_QNNPACK=0
export TORCH_CUDA_ARCH_LIST="5.3"
export PYTORCH_BUILD_VERSION
export PYTORCH_BUILD_NUMBER=1

# if CCACHE_PREFIX=distcc, compilation using standard configuration will fail
# ccache would be invoked for the native compiler (/usr/bin/ccache /usr/bin/c++ ...), causing remote compilation to fail
# or distcc would end up recursively invoking itself (/usr/bin/ccache /usr/lib/ccache/c++ ...)

# the python configuration will detect ccache and create build/CMakeCache.txt
# per https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md#use-ccache, each compiler should list ccache like:
# CMAKE_CXX_COMPILER_LAUNCHER:STRING=/usr/bin/ccache

if [ "$CCACHE_PREFIX" == "distcc" ]; then
  export CMAKE_C_COMPILER_LAUNCHER=/usr/lib/ccache/gcc-8
  export CMAKE_CXX_COMPILER_LAUNCHER=/usr/lib/ccache/g++-8
#  export CMAKE_CUDA_COMPILER_LAUNCHER=
else
  unset CMAKE_C_COMPILER_LAUNCHER CMAKE_CXX_COMPILER_LAUNCHER CMAKE_CUDA_COMPILER_LAUNCHER
fi

# to get past the following error, see: https://github.com/shanemcandrewai/pytorch-setup
#CMake Error at cmake/Dependencies.cmake:1060 (if):
#  if given arguments:
#    "VERSION_LESS" "3.7"
#  Unknown arguments specified
mv cmake/Dependencies.cmake cmake/Dependencies.orig
awk '/^ *if\(\${PYTHONLIBS_VERSION/,/^$/{$0 = "#" $0}{print}' cmake/Dependencies.orig > cmake/Dependencies.cmake

python setup.py bdist_wheel || exit 1

wheel=~/Downloads/torch-$PYTORCH_BUILD_VERSION-cp36-cp36m-linux_aarch64.whl
cp -vp dist/torch*.whl $wheel || exit 1
echo "You are now ready to run buildDjlJni"

